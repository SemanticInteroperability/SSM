<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//com.atguigu.mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">

    <!--todo
            字段名和属性名不一致的情况，如何处理映射关系
            1.为查询的字段设置 别名，和属性名保持一致
            2.当字段符合Mysql的要求使用_，而属性符合java的要求使用驼峰
            此时可以在MyBatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰
            3. resultMap:设置自定义的映射关系
    -->

<!--    Emp getEmpByEmpId(@Param("empId") Integer empId);-->

    <select id="getEmpByEmpIdOld" resultType="Emp">
        select * from emp where emp_id=#{empId}
    </select>

    <!--

        resultMap:设置自定义的映射关系
        id：唯一标识
        type：处理映射关系的实体类的类型
        常用的标签：
        id：处理主键和实体类中属性的映射关系
        result：处理普通字段和实体类中属性的映射关系
        association:处理多对一的映射关系（处理集合类型的属性）
        collection:处理一对多的映射关系
        column：设置映射关系中的字段名，必须是sql查询出的某个字段
        property：设置映射关系中的属性的属性名，必须是处理的实体类类型中的属性名
    -->
    <resultMap id="empResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>
    <select id="getEmpByEmpId" resultMap="empResultMap">
        select * from emp where emp_id=#{empId}
    </select>





    <!--1.级联-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>


    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>

        <!--
            property:设置需要处理映射关系的属性的属性名
            javaType：设置需要处理的属性的类型
        -->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
<!--    Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId);-->
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select emp.*,t_dept.dept_name from emp left join t_dept on emp.dept_id = t_dept.dept_id where emp.emp_id=#{empId}
    </select>


    <resultMap id="empAndDeptByStepResultMap" type="Emp" >
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <!--
            property:设置需要处理映射关系的属性的属性名
            select：设置分布查询的sql的唯一标识
            column：将查询出的某个字段作为分布查询的sql的条件
            fetchType:在开启了全局延迟加载的环境中，通过该属性设置当前的分步查询是否使用延迟查询
            fetchType="lazy"(立即加载)||"eager"(延迟加载)
        -->
        <association property="dept" fetchType="lazy"
                     select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id"></association>
    </resultMap>
<!--    Emp getEmpAndDeptByStepOne(@Param("empId") Integer empId);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from emp where emp_id=#{empId}
    </select>



<!--    List<Emp> getDeptAndEmpByStepTwo(@Param("deptId") Integer deptId);-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from emp where dept_id=#{deptId}
    </select>
</mapper>